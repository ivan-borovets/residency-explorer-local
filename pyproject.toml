[tool.poetry]
package-mode = false

[tool.poetry.dependencies]
alembic = "^1.13.2"
camelsnake = "^0.0.2"
psycopg2-binary = "^2.9.9"
pydantic = "^2.8.2"
pydantic-settings = "^2.4.0"
python = "^3.12"
rtoml = "^0.11.0"
sqlalchemy = { extras = ["mypy"], version = "^2.0.32" }

[tool.poetry.group.dev.dependencies]
bandit = "^1.7.9"
black = "^24.8.0"
isort = "^5.13.2"
mypy = "^1.11.1"
pre-commit = "^3.8.0"
pylint = "^3.2.6"
ruff = "^0.5.7"

[tool.bandit.assert_used]
skips = ['*_test.py', '*/test_*.py']

[tool.black]
line-length = 88
exclude = 'README\.md'

[tool.coverage.report]
show_missing = true

[tool.coverage.run]
source = ["src"]
omit = [
    "src/**/__init__.py"
]

[tool.isort]
profile = "black"

[tool.mypy]
plugins = [
    "pydantic.mypy",
    "sqlalchemy.ext.mypy.plugin",
]
ignore_missing_imports = true

[tool.pylint.main]
disable = [
    "C0111", # "missing-docstring"
    "E1101", # "no-member"
    "R0903", # "too-few-public-methods"
    "R0913", # "too-many-arguments"
    "R1705", # "no-else-return"
    "R1711", # "useless-return"
    "R1720", # "no-else-raise"
    "W0613", # "unused-argument"
]
init-hook = 'import sys; sys.path.append("src")'
max-line-length = 88

[tool.ruff]
line-length = 88

[tool.pytest.ini_options]
filterwarnings = [
    "ignore:There is no current event loop:DeprecationWarning"
]
pythonpath = "src"
